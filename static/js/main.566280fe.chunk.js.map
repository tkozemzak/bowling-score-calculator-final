{"version":3,"sources":["Components/Frame.js","Components/TenthFrame.js","Components/Scoreboard.js","Components/ScoreForm.js","Components/EnterScores.js","Functions/Functions.js","Components/Login.js","App.js","index.js"],"names":["Frame","box1Value","box2Value","item","type","throw1","throw2","className","totalScoreAtCurrFrame","TenthFrame","box3Value","scoresToSendToScoreboard","finalScore","filteredTenthFrameScores","filter","index","firstThrow","secondThrow","thirdThrow","undefined","Scoreboard","name","newGame","mappedScores","map","i","length","onClick","ScoreForm","currentFrame","handleFrameEntry","setFinishedGame","useState","setThrow1","setThrow2","throw3","setThrow3","scoreSum","setScoreSum","additionalThrow","setAdditionalThrow","useEffect","handleScoreSubmit","e","preventDefault","formScoreObj","frame","alert","handleGameEnd","placeholder","onChange","Number","target","value","EnterScores","scoresEntered","setScoresEntered","scores","setScores","setCurrentFrame","setScoresToSendToScoreBoard","finishedGame","handleStateUpdate","scoresArray","formattedScores","previousFrame","score","calculateFinalScores","nextFrame","secondNextFrame","caclulateUniqueScores","push","amountOfThrows","frameScore","formatScoreObj","splice","condenseTenthFrame","separateTenthFrameScores","handleFrameCalculations","fetchScores","formScores","Login","setName","enteredName","setEnteredName","handleLogin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.566280fe.chunk.js","sourcesContent":["import \"../Styles/Frame.css\";\n\nconst Frame = ({ item }) => {\n  let box1Value;\n  let box2Value;\n  if (item.type === \"strike\") {\n    box1Value = \"\";\n    box2Value = \"X\";\n  } else if (item.type === \"spare\") {\n    box1Value = item.throw1;\n    box2Value = \"/\";\n  } else if (item.type === \"open\" && item.throw1 === 0) {\n    box1Value = \"-\";\n    box2Value = item.throw2;\n  } else if (item.type === \"open\" && item.throw2 === 0) {\n    box1Value = item.throw1;\n    box2Value = \"-\";\n  } else {\n    box1Value = item.throw1;\n    box2Value = item.throw2;\n  }\n\n  return (\n    <div className=\"frame\">\n      <div className=\"score-boxes\">\n        <div className=\"throw-box\">{box1Value}</div>\n        <div className=\"throw-box\">{box2Value}</div>\n      </div>\n      <div className=\"frame-total-score-box\">{item.totalScoreAtCurrFrame}</div>\n    </div>\n  );\n};\n\nexport default Frame;\n","import React from \"react\";\nimport \"../Styles/TenthFrame.css\";\n\nconst TenthFrame = ({ scoresToSendToScoreboard, finalScore }) => {\n  let filteredTenthFrameScores = scoresToSendToScoreboard.filter(\n    (item, index) => {\n      if (index > 8) return item;\n    }\n  );\n\n  let box1Value;\n  let box2Value;\n  let box3Value;\n\n  let firstThrow = filteredTenthFrameScores[0];\n  let secondThrow = filteredTenthFrameScores[1];\n  let thirdThrow = filteredTenthFrameScores[2] && filteredTenthFrameScores[2];\n\n  /*\n   * Check conditions on throws to determine which symbol should show for * each throw box\n   */\n\n  if (firstThrow.type === \"strike\") {\n    box1Value = \"X\";\n    if (secondThrow.type === \"strike\") {\n      box2Value = \"X\";\n      if (thirdThrow.type === \"strike\") {\n        box3Value = \"X\";\n      }\n    } else if (secondThrow.type === \"spare\") {\n      box2Value = secondThrow.throw1;\n      box3Value = \"/\";\n    } else if (secondThrow.type === \"open\") {\n      box2Value = secondThrow.throw1 || \"-\";\n      box3Value = secondThrow.throw2 || \"-\";\n    }\n  } else if (firstThrow.type === \"spare\") {\n    box1Value = firstThrow.throw1;\n    box2Value = \"/\";\n    if (secondThrow !== undefined && secondThrow.type === \"strike\") {\n      box3Value = \"X\";\n    }\n    if (secondThrow !== undefined && secondThrow.type === \"open\") {\n      box3Value = secondThrow.throw1;\n    }\n  } else if (firstThrow.type === \"open\") {\n    box1Value = firstThrow.throw1;\n    box2Value = firstThrow.throw2 || \"-\";\n    box3Value = \"-\";\n  }\n\n  return (\n    <div className=\"tenth-frame\">\n      <div className=\"score-boxes\">\n        <div className=\"tenth-frame-throw-box\">{box1Value}</div>\n        <div className=\"tenth-frame-throw-box\">{box2Value}</div>\n        <div className=\"tenth-frame-throw-box\">{box3Value}</div>\n      </div>\n      <div className=\"frame-total-score-box\">{finalScore}</div>\n    </div>\n  );\n};\n\nexport default TenthFrame;\n","import Frame from \"./Frame.js\";\nimport TenthFrame from \"./TenthFrame.js\";\nimport \"../Styles/Scoreboard.css\";\n\nconst Scoreboard = ({ scoresToSendToScoreboard, name, newGame }) => {\n  let mappedScores = scoresToSendToScoreboard.map((item, i) => {\n    return i < 9 && <Frame item={item} key={i} />;\n  });\n\n  let finalScore =\n    scoresToSendToScoreboard[scoresToSendToScoreboard.length - 1]\n      .totalScoreAtCurrFrame;\n\n  return (\n    <div className=\"scoreboard-container\">\n      <div className=\"scoreboard\">\n        <div className=\"name\">\n          <h3>Player: {name}</h3>\n        </div>\n        <div className=\"frame-container\">\n          {mappedScores}\n          {scoresToSendToScoreboard.length > 9 && (\n            <TenthFrame\n              scoresToSendToScoreboard={scoresToSendToScoreboard}\n              finalScore={finalScore}\n            />\n          )}\n        </div>\n        <div className=\"total-score\">Total Score: {finalScore}</div>\n      </div>\n      <div className=\"new-game-button\">\n        <button onClick={() => newGame()}>New Game</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import { useState, useEffect } from \"react\";\nimport \"../Styles/ScoreForm.css\";\n\nconst ScoreForm = ({ currentFrame, handleFrameEntry, setFinishedGame }) => {\n  const [throw1, setThrow1] = useState(\"\");\n  const [throw2, setThrow2] = useState(\"\");\n  const [throw3, setThrow3] = useState(\"\");\n  const [scoreSum, setScoreSum] = useState(0);\n  const [additionalThrow, setAdditionalThrow] = useState(false);\n\n  useEffect(() => {\n    setScoreSum(throw1 + throw2);\n  }, [throw1, throw2]);\n\n  useEffect(() => {\n    if (currentFrame === 10 && scoreSum >= 10) {\n      setAdditionalThrow(true);\n    }\n  }, [scoreSum, currentFrame]);\n\n  const handleScoreSubmit = (e) => {\n    e.preventDefault();\n    let formScoreObj = {\n      frame: currentFrame,\n      throw1,\n      throw2,\n      throw3,\n    };\n\n    if (throw1.length === 0 || throw2.length === 0) {\n      alert(\"You must enter a score\");\n    } else if (scoreSum > 10) {\n      alert(\"The score for one frame cannot be higher than 10\");\n    } else {\n      handleFrameEntry(formScoreObj);\n      setThrow1(\"\");\n      setThrow2(\"\");\n      setScoreSum(0);\n      return true;\n    }\n  };\n\n  const handleGameEnd = (e) => {\n    e.preventDefault();\n    let isDone = handleScoreSubmit(e);\n    isDone && setFinishedGame(true);\n  };\n\n  return (\n    <div>\n      {currentFrame < 10 ? (\n        <div className=\"input-container\">\n          <input\n            className=\"score-input\"\n            type=\"number\"\n            placeholder=\"How many pins did you hit on your first throw?\"\n            onChange={(e) => setThrow1(Number(e.target.value))}\n            value={throw1}\n          />\n          <input\n            className=\"score-input\"\n            type=\"number\"\n            placeholder=\"How many pins did you hit on your second throw?\"\n            onChange={(e) => setThrow2(Number(e.target.value))}\n            value={throw2}\n          />\n          <button\n            className=\"submit-button\"\n            onClick={(e) => handleScoreSubmit(e)}\n          >\n            Submit Scores for Frame {currentFrame}\n          </button>\n          <button\n            className=\"final-submit-button\"\n            onClick={(e) => handleGameEnd(e)}\n          >\n            Submit Score Now (Did not finish all 10 frames)\n          </button>\n        </div>\n      ) : (\n        <div className=\"input-container\">\n          <input\n            className=\"score-input\"\n            type=\"number\"\n            placeholder=\"How many pins did you hit on your first throw?\"\n            onChange={(e) => setThrow1(Number(e.target.value))}\n            value={throw1}\n          />\n          <input\n            className=\"score-input\"\n            type=\"number\"\n            placeholder=\"How many pins did you hit on your second throw?\"\n            onChange={(e) => setThrow2(Number(e.target.value))}\n            value={throw2}\n          />\n          {additionalThrow && (\n            <input\n              className=\"score-input\"\n              type=\"number\"\n              placeholder=\"How many pins did you hit on your third throw?\"\n              onChange={(e) => setThrow3(Number(e.target.value))}\n              value={throw3}\n            />\n          )}\n          <button\n            className=\"final-submit-button\"\n            onClick={(e) => handleGameEnd(e)}\n          >\n            Submit Final Score\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScoreForm;\n","import { useState, useEffect } from \"react\";\nimport Scoreboard from \"./Scoreboard\";\nimport ScoreForm from \"./ScoreForm\";\nimport { handleFrameCalculations } from \"../Functions/Functions\";\n\n// for testing only - sample array of score objects\nimport { defaultScores } from \"../fixtures/defaultScores\";\n\nconst EnterScores = ({ name }) => {\n  const [scoresEntered, setScoresEntered] = useState(false);\n  const [scores, setScores] = useState([]);\n  const [currentFrame, setCurrentFrame] = useState(1);\n  const [scoresToSendToScoreboard, setScoresToSendToScoreBoard] = useState([]);\n  const [finishedGame, setFinishedGame] = useState(false);\n\n  const fetchScores = () => {\n    let formattedScores = handleFrameCalculations(scores);\n    setScoresToSendToScoreBoard(formattedScores);\n    setScoresEntered(true);\n  };\n\n  const newGame = () => {\n    setScoresEntered(false);\n    setScores([]);\n    setCurrentFrame(1);\n    setScoresToSendToScoreBoard([]);\n    setFinishedGame(false);\n  };\n\n  const handleFrameEntry = (formScores) => {\n    handleStateUpdate(formScores);\n  };\n\n  const handleStateUpdate = (scoresArray) => {\n    setScores([...scores, scoresArray]);\n    setCurrentFrame(currentFrame + 1);\n  };\n\n  useEffect(() => {\n    if (currentFrame > 10 || finishedGame) {\n      fetchScores();\n    }\n  }, [currentFrame, finishedGame]);\n\n  return (\n    <div>\n      {!scoresEntered ? (\n        <>\n          <h1>\n            Welcome,\n            {name}!\n          </h1>\n          <h1>Enter your scores for frame {currentFrame} here:</h1>\n          <ScoreForm\n            currentFrame={currentFrame}\n            handleFrameEntry={handleFrameEntry}\n            setFinishedGame={setFinishedGame}\n          />\n        </>\n      ) : (\n        <Scoreboard\n          scoresToSendToScoreboard={scoresToSendToScoreboard}\n          name={name}\n          newGame={newGame}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default EnterScores;\n","/*\n * Tenth frame comes here as a single object. Depending on the scores it must be separated into multiple frames/objects here.\n */\n\nconst separateTenthFrameScores = (scores) => {\n  if (scores.length > 9) {\n    scores.push({\n      frame: 11,\n      throw1: scores[9].throw2,\n      throw2: 0,\n      scoreSum: scores[9].throw2,\n    });\n\n    if (scores[9].throw3 > 0) {\n      scores.push({\n        frame: 12,\n        throw1: scores[9].throw3,\n        throw2: 0,\n        scoreSum: scores[9].throw2,\n      });\n    }\n\n    scores[9].throw2 = 0;\n    scores[9].throw3 = 0;\n  }\n\n  return scores;\n};\n\n/*\n * After dispersing tenth frame into separate objects, determine how each pseudo frame should be condensed and how frame scores should be calculated\n */\n\nconst condenseTenthFrame = (scores) => {\n  if (scores.length > 9) {\n    if (scores[9].throw1 !== 10) {\n      scores[9].throw2 = scores[10].throw1;\n      scores[9].scoreSum = scores[9].throw1 + scores[10].throw1;\n\n      scores.splice(10, 1);\n    } else if (scores[10].throw1 !== 10) {\n      if (scores[11]) {\n        scores[10].throw2 = scores[11].throw1;\n        scores[10].scoreSum = scores[10].throw1 + scores[11].throw1;\n\n        scores.splice(11, 1);\n      }\n    }\n  }\n\n  return scores;\n};\n\n/*\n * Format each frame object with the proper frame type (i.e strike, spare, open).\n */\n\nconst formatScoreObj = (scores) => {\n  let formattedScores = [];\n\n  for (let i = 0; i < scores.length; i++) {\n    if (scores[i].throw1 + scores[i].throw2 === 10) {\n      if (scores[i].throw1 === 10) {\n        formattedScores.push({\n          type: \"strike\",\n          frame: scores[i].frame,\n          throw1: scores[i].throw1,\n          throw2: scores[i].throw2,\n          score: 10,\n          amountOfThrows: 1,\n        });\n      } else {\n        formattedScores.push({\n          type: \"spare\",\n          frame: scores[i].frame,\n          throw1: scores[i].throw1,\n          throw2: scores[i].throw2,\n          score: 10,\n          amountOfThrows: 2,\n        });\n      }\n    }\n    if (scores[i].throw1 + scores[i].throw2 !== 10) {\n      let frameScore = scores[i].throw1 + scores[i].throw2;\n      formattedScores.push({\n        type: \"open\",\n        frame: scores[i].frame,\n        throw1: scores[i].throw1,\n        throw2: scores[i].throw2,\n        score: frameScore,\n        amountOfThrows: 2,\n      });\n    }\n  }\n\n  return formattedScores;\n};\n\n/*\n * Check each frame object for the frame type (i.e strike, spare, open) and consolidate individual frame scores according to consecutive strikes or spares.\n */\n\nconst caclulateUniqueScores = (scores) => {\n  for (let i = scores.length - 1; i >= 0; i--) {\n    let currentFrame = scores[i];\n    let nextFrame = scores[i + 1];\n    let secondNextFrame = scores[i + 2];\n\n    if (i > 8 && currentFrame.type === \"strike\") {\n      if (currentFrame.type === \"strike\" && nextFrame?.type === \"strike\") {\n        currentFrame.score = 10;\n      }\n    } else {\n      if (currentFrame.type === \"strike\") {\n        if (nextFrame && nextFrame.type !== \"strike\") {\n          currentFrame.score += nextFrame.throw1;\n          currentFrame.score += nextFrame.throw2;\n        }\n        if (nextFrame && nextFrame.type === \"strike\") {\n          currentFrame.score += 10;\n          if (secondNextFrame && secondNextFrame.type === \"strike\") {\n            currentFrame.score += 10;\n          }\n          if (secondNextFrame && secondNextFrame.type !== \"strike\") {\n            currentFrame.score += secondNextFrame.throw1;\n          }\n        }\n      }\n      if (currentFrame.type === \"spare\" && nextFrame) {\n        currentFrame.score += nextFrame.throw1;\n      }\n    }\n  }\n\n  return scores;\n};\n\n/*\n * Assign a total score at each frame, for each frame for UI to pull and render according to each frame.\n */\nconst calculateFinalScores = (scores) => {\n  for (let i = 0; i < scores.length; i++) {\n    let currentFrame = scores[i];\n    let previousFrame = scores[i - 1];\n    if (previousFrame) {\n      currentFrame[\"totalScoreAtCurrFrame\"] =\n        currentFrame.score + previousFrame.totalScoreAtCurrFrame;\n    } else {\n      currentFrame[\"totalScoreAtCurrFrame\"] = currentFrame.score;\n    }\n  }\n\n  return scores;\n};\n\n/*\n * Run all functions to calculate each frame score and type. Return formatted list of scores for UI to render.\n */\n\nexport const handleFrameCalculations = (scores) => {\n  let separatedTenthFrameScores = separateTenthFrameScores(scores);\n  let handledTenthFrameScores = condenseTenthFrame(separatedTenthFrameScores);\n  let formattedObjects = formatScoreObj(handledTenthFrameScores);\n  let strikeScores = caclulateUniqueScores(formattedObjects);\n  let calculatedFinalScores = calculateFinalScores(strikeScores);\n  return calculatedFinalScores;\n};\n","import { useState } from \"react\";\n\nconst Login = ({ setName }) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const handleLogin = (e) => {\n    e.preventDefault();\n    setName(enteredName);\n  };\n\n  return (\n    <div>\n      <input\n        placeholder=\"Enter your name here\"\n        onChange={(e) => setEnteredName(e.target.value)}\n      />\n      <button onClick={(e) => handleLogin(e)}>Submit</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport EnterScores from \"./Components/EnterScores\";\nimport Login from \"./Components/Login\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      {!name ? <Login setName={setName} /> : <EnterScores name={name} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}